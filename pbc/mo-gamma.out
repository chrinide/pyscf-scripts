/home/jluis/pkgs/python/2.7.14/lib/python2.7/site-packages/scipy/linalg/basic.py:17: RuntimeWarning: numpy.dtype size changed, may indicate binary incompatibility. Expected 96, got 88
  from ._solve_toeplitz import levinson
/home/jluis/pkgs/python/2.7.14/lib/python2.7/site-packages/scipy/linalg/__init__.py:207: RuntimeWarning: numpy.dtype size changed, may indicate binary incompatibility. Expected 96, got 88
  from ._decomp_update import *
/home/jluis/pkgs/h5py/2.7.1/lib/python2.7/site-packages/h5py-2.7.1-py2.7-linux-x86_64.egg/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
  from ._conv import register_converters as _register_converters
/home/jluis/pkgs/python/2.7.14/lib/python2.7/site-packages/scipy/special/__init__.py:640: RuntimeWarning: numpy.dtype size changed, may indicate binary incompatibility. Expected 96, got 88
  from ._ufuncs import *
/home/jluis/pkgs/python/2.7.14/lib/python2.7/site-packages/scipy/special/_ellip_harm.py:7: RuntimeWarning: numpy.dtype size changed, may indicate binary incompatibility. Expected 96, got 88
  from ._ellip_harm_2 import _ellipsoid, _ellipsoid_norm
/home/jluis/pkgs/python/2.7.14/lib/python2.7/site-packages/scipy/sparse/lil.py:19: RuntimeWarning: numpy.dtype size changed, may indicate binary incompatibility. Expected 96, got 88
  from . import _csparsetools
/home/jluis/pkgs/python/2.7.14/lib/python2.7/site-packages/scipy/sparse/csgraph/__init__.py:165: RuntimeWarning: numpy.dtype size changed, may indicate binary incompatibility. Expected 96, got 88
  from ._shortest_path import shortest_path, floyd_warshall, dijkstra,\
/home/jluis/pkgs/python/2.7.14/lib/python2.7/site-packages/scipy/sparse/csgraph/_validation.py:5: RuntimeWarning: numpy.dtype size changed, may indicate binary incompatibility. Expected 96, got 88
  from ._tools import csgraph_to_dense, csgraph_from_dense,\
/home/jluis/pkgs/python/2.7.14/lib/python2.7/site-packages/scipy/sparse/csgraph/__init__.py:167: RuntimeWarning: numpy.dtype size changed, may indicate binary incompatibility. Expected 96, got 88
  from ._traversal import breadth_first_order, depth_first_order, \
/home/jluis/pkgs/python/2.7.14/lib/python2.7/site-packages/scipy/sparse/csgraph/__init__.py:169: RuntimeWarning: numpy.dtype size changed, may indicate binary incompatibility. Expected 96, got 88
  from ._min_spanning_tree import minimum_spanning_tree
/home/jluis/pkgs/python/2.7.14/lib/python2.7/site-packages/scipy/sparse/csgraph/__init__.py:170: RuntimeWarning: numpy.dtype size changed, may indicate binary incompatibility. Expected 96, got 88
  from ._reordering import reverse_cuthill_mckee, maximum_bipartite_matching, \
/home/jluis/pkgs/python/2.7.14/lib/python2.7/site-packages/scipy/optimize/_trlib/__init__.py:1: RuntimeWarning: numpy.dtype size changed, may indicate binary incompatibility. Expected 96, got 88
  from ._trlib import TRLIBQuadraticSubproblem
/home/jluis/pkgs/python/2.7.14/lib/python2.7/site-packages/scipy/optimize/_numdiff.py:10: RuntimeWarning: numpy.dtype size changed, may indicate binary incompatibility. Expected 96, got 88
  from ._group_columns import group_dense, group_sparse
/home/jluis/pkgs/python/2.7.14/lib/python2.7/site-packages/scipy/interpolate/_bsplines.py:10: RuntimeWarning: numpy.dtype size changed, may indicate binary incompatibility. Expected 96, got 88
  from . import _bspl
/home/jluis/pkgs/python/2.7.14/lib/python2.7/site-packages/scipy/spatial/__init__.py:95: RuntimeWarning: numpy.dtype size changed, may indicate binary incompatibility. Expected 96, got 88
  from .ckdtree import *
/home/jluis/pkgs/python/2.7.14/lib/python2.7/site-packages/scipy/spatial/__init__.py:96: RuntimeWarning: numpy.dtype size changed, may indicate binary incompatibility. Expected 96, got 88
  from .qhull import *
/home/jluis/pkgs/python/2.7.14/lib/python2.7/site-packages/scipy/spatial/_spherical_voronoi.py:18: RuntimeWarning: numpy.dtype size changed, may indicate binary incompatibility. Expected 96, got 88
  from . import _voronoi
/home/jluis/pkgs/python/2.7.14/lib/python2.7/site-packages/scipy/spatial/distance.py:122: RuntimeWarning: numpy.dtype size changed, may indicate binary incompatibility. Expected 96, got 88
  from . import _hausdorff
#INFO: **** input file is /home/jluis/src/git/scripts/pbc/mo-gamma.py ****
#!/usr/bin/env python

import numpy
from pyscf.pbc import df  as pbcdf
from pyscf.pbc import scf as pbcscf
from pyscf.pbc import gto as pbcgto
from pyscf.pbc import dft as pbcdft
from pyscf.tools import wfn_format
from pyscf import lib, ao2mo, scf
einsum = lib.einsum

name = 'mo-gamma'

cell = pbcgto.Cell()
cell.atom = '''C     0.      0.      0.    
               C     0.8917  0.8917  0.8917
               C     1.7834  1.7834  0.    
               C     2.6751  2.6751  0.8917
               C     1.7834  0.      1.7834
               C     2.6751  0.8917  2.6751
               C     0.      1.7834  1.7834
               C     0.8917  2.6751  2.6751'''
cell.a = numpy.eye(3)*3.5668
cell.basis = 'def2-svp'
cell.verbose = 4
cell.symmetry = 0
cell.build()

mf = pbcscf.RHF(cell).mix_density_fit(auxbasis='def2-svp-jkfit')
mf.exxdiv = None
mf.max_cycle = 150
mf.chkfile = name+'.chk'
#mf.init_guess = 'chk'
mf.with_df._cderi_to_save = name+'.h5'
#mf.with_df._cderi = name+'.h5'
mf.with_df.mesh = [10,10,10] # Tune PWs in MDF for performance/accuracy balance
mf = scf.addons.remove_linear_dep_(mf)
mf.kernel()

c = mf.mo_coeff[:,mf.mo_occ>0]
nmo = c.shape[1]
occ = mf.mo_occ[mf.mo_occ>0]
dm = numpy.diag(occ)

##############################################################################
# Get momo electronic integrals
##############################################################################
s = cell.pbc_intor('cint1e_ovlp_sph')
t = cell.pbc_intor('cint1e_kin_sph')
h = mf.get_hcore()
s = reduce(numpy.dot, (c.T,s,c))
t = reduce(numpy.dot, (c.T,t,c))
h = reduce(numpy.dot, (c.T,h,c))
##############################################################################
enuc = cell.energy_nuc() 
ekin = einsum('ij,ij->',t,dm)
hcore = einsum('ij,ij->',h,dm)
pop = einsum('ij,ij->',s,dm)
print('Population : %s' % pop)
print('Kinetic energy : %s' % ekin)
print('Hcore energy : %s' % hcore)
print('Nuclear energy : %s' % enuc)
##############################################################################

##############################################################################
# Get bielectronic integrals
##############################################################################
eri_mo = ao2mo.kernel(mf._eri, c, compact=False)
eri_mo = eri_mo.reshape(nmo,nmo,nmo,nmo)
##############################################################################
rdm2_j = einsum('ij,kl->ijkl', dm, dm) 
rdm2_xc = -0.5*einsum('il,kj->ilkj', dm, dm)
rdm2 = rdm2_j + rdm2_xc
bie1 = einsum('ijkl,ijkl->', eri_mo, rdm2_j)*0.5 
bie2 = einsum('ijkl,ilkj->', eri_mo, rdm2_xc)*0.5
print('J energy : %s' % bie1)
print('XC energy : %s' % bie2)
print('EE energy : %s' % (bie1+bie2))
##############################################################################

etot = enuc + hcore + bie1 + bie2
print('Total energy : %s' % etot)
#INFO: ******************** input file end ********************


System: ('Linux', 'silicio', '3.16.0-4-amd64', '#1 SMP Debian 3.16.51-3 (2017-12-13)', 'x86_64', '')  Threads 12
Python 2.7.14 (default, Apr  9 2018, 16:34:43) 
[GCC 7.3.0]
numpy 1.15.0  scipy 1.1.0
Date: Fri Aug 10 21:58:00 2018
PySCF version 1.5.2
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD 2687853e253f5eea52524d158888a4513808b96e
GIT HEAD      ref: refs/heads/master
GIT master branch  b542c01b5c1fe9c958fb5788df071e2bb87a7e31

[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 8
[INPUT] num. electrons = 48
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 C      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 C      0.891700000000   0.891700000000   0.891700000000 AA    1.685068785275   1.685068785275   1.685068785275 Bohr
[INPUT]  3 C      1.783400000000   1.783400000000   0.000000000000 AA    3.370137570549   3.370137570549   0.000000000000 Bohr
[INPUT]  4 C      2.675100000000   2.675100000000   0.891700000000 AA    5.055206355824   5.055206355824   1.685068785275 Bohr
[INPUT]  5 C      1.783400000000   0.000000000000   1.783400000000 AA    3.370137570549   0.000000000000   3.370137570549 Bohr
[INPUT]  6 C      2.675100000000   0.891700000000   2.675100000000 AA    5.055206355824   1.685068785275   5.055206355824 Bohr
[INPUT]  7 C      0.000000000000   1.783400000000   1.783400000000 AA    0.000000000000   3.370137570549   3.370137570549 Bohr
[INPUT]  8 C      0.891700000000   2.675100000000   2.675100000000 AA    1.685068785275   5.055206355824   5.055206355824 Bohr

nuclear repulsion = -115.084162310624
number of shells = 48
number of NR pGTOs = 192
number of NR cGTOs = 112
basis = def2-svp
ecp = {}
CPU time:         4.22
lattice vectors  a1 [6.740275141, 0.000000000, 0.000000000]
                 a2 [0.000000000, 6.740275141, 0.000000000]
                 a3 [0.000000000, 0.000000000, 6.740275141]
dimension = 3
Cell volume = 306.22
rcut = 18.287612365640392 (nimgs = [3 3 3])
lattice sum = 275 cells
precision = 1e-08
pseudo = None
ke_cutoff = 12119.909447131999
    = [335 335 335] mesh (37595375 PWs)
ew_eta = 3.5115
ew_cut = 2.014018394115346 (nimgs = [1 1 1])


******** <class 'pyscf.pbc.scf.hf.RHF'> flags ********
method = RHF-SCF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 150
direct_scf = False
chkfile to save SCF result = mo-gamma.chk
max_memory 64000 MB (current use 131 MB)
******** PBC SCF flags ********
kpt = [0. 0. 0.]
Exchange divergence treatment (exxdiv) = None
DF object = <pyscf.pbc.df.mdf.MDF object at 0x2ac8ff299750>
Set gradient conv threshold to 3.16228e-05


******** <class 'pyscf.pbc.df.mdf.MDF'> flags ********
mesh = [10, 10, 10] (1000 PWs)
auxbasis = def2-svp-jkfit
eta = 0.20145903881804622
exp_to_discard = 0.20145903881804622
_cderi_to_save = mo-gamma.h5
len(kpts) = 1
Drop 32 primitive fitting functions
make aux basis, num shells = 168, num cGTOs = 504
auxcell.rcut 11.648273354176391
init E= -297.303059516555
  HOMO = 0.724478399512887  LUMO = 0.889313271015953
cycle= 1 E= -292.5027290959  delta_E=  4.8  |g|= 0.366  |ddm|= 5.53
  HOMO = 0.754873030009105  LUMO = 0.939085831809011
cycle= 2 E= -292.53649649019  delta_E= -0.0338  |g|= 0.0446  |ddm|= 2.04
  HOMO = 0.748159588372292  LUMO = 0.940353258082849
cycle= 3 E= -292.536506960333  delta_E= -1.05e-05  |g|= 0.0435  |ddm|= 0.312
  HOMO = 0.748338837673073  LUMO = 0.941092649682901
cycle= 4 E= -292.53697181141  delta_E= -0.000465  |g|= 0.00265  |ddm|= 0.141
  HOMO = 0.748642916119696  LUMO = 0.941152828619166
cycle= 5 E= -292.536973312412  delta_E= -1.5e-06  |g|= 0.000295  |ddm|= 0.0117
  HOMO = 0.748628884733668  LUMO = 0.941157694360681
cycle= 6 E= -292.536973332365  delta_E= -2e-08  |g|= 6.09e-05  |ddm|= 0.0019
  HOMO = 0.748625288747269  LUMO = 0.941159279784243
cycle= 7 E= -292.536973333233  delta_E= -8.68e-10  |g|= 1.07e-05  |ddm|= 0.000355
  HOMO = 0.748625637919888  LUMO = 0.941159237514387
Extra cycle  E= -292.536973333224  delta_E= 8.7e-12  |g|= 1.23e-05  |ddm|= 7e-05
converged SCF energy = -292.536973333224
Population : 48.00000000000002
Kinetic energy : 301.4881942522395
Hcore energy : -204.64071368480887
Nuclear energy : -115.08416231062358
J energy : 59.43036423182912
XC energy : -32.24246156962085
EE energy : 27.187902662208266
Total energy : -292.5369733332242
