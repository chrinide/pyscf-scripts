#INFO: **** input file is /home/jluis/src/git/scripts/mp2/test/mp2.py ****
#!/usr/bin/env python

import numpy
from pyscf import gto, scf, lib, ao2mo
from pyscf.tools import molden
einsum = lib.einsum

name = 'ch4'

mol = gto.Mole()
mol.basis = 'aug-cc-pvtz'
mol.atom = '''
C  0.0000  0.0000  0.0000
H  0.6276  0.6276  0.6276
H  0.6276 -0.6276 -0.6276
H -0.6276  0.6276 -0.6276
H -0.6276 -0.6276  0.6276
'''
mol.charge = 0
mol.spin = 0
mol.symmetry = 1
mol.verbose = 4
mol.build()

mf = scf.RHF(mol)
ehf = mf.kernel()

ncore = 1
nao, nmo = mf.mo_coeff.shape
nocc = mol.nelectron//2 - ncore
nvir = nmo - nocc - ncore

mo_core = mf.mo_coeff[:,:ncore]
mo_occ = mf.mo_coeff[:,ncore:ncore+nocc]
mo_vir = mf.mo_coeff[:,ncore+nocc:]
co = mo_occ
cv = mo_vir
eo = mf.mo_energy[ncore:ncore+nocc]
ev = mf.mo_energy[ncore+nocc:]
eri_mo = ao2mo.general(mf._eri, (co,cv,co,cv), compact=False)
eri_mo = eri_mo.reshape(nocc,nvir,nocc,nvir)
lib.logger.info(mf,"* Core orbitals: %d" % ncore)
lib.logger.info(mf,"* Virtual orbitals: %d" % (len(ev)))
 
e_denom = 1.0/(eo.reshape(-1,1,1,1)-ev.reshape(-1,1,1)+eo.reshape(-1,1)-ev)
t2 = numpy.zeros((nocc,nvir,nocc,nvir))
t2 = 2.0*einsum('iajb,iajb->iajb', eri_mo, e_denom)
t2 -= einsum('ibja,iajb->iajb', eri_mo, e_denom)
e_mp2 = numpy.einsum('iajb,iajb->', eri_mo, t2, optimize=True)
lib.logger.info(mf,"!*** E(MP2): %12.8f" % e_mp2)
lib.logger.info(mf,"!**** E(HF+MP2): %12.8f" % (e_mp2+ehf))

den_file = name + '.den'
fspt = open(den_file,'w')
fspt.write('MP2\n')
fspt.write('1-RDM:\n')
occup = 2.0
norb = mol.nelectron//2
for i in range(norb):
    fspt.write('%i %i %.10f\n' % ((i+1), (i+1), occup))
fspt.write('t2_iajb:\n')
for i in range(nocc):
    for j in range(nvir):
        for k in range(nocc):
            for l in range(nvir):
                if (abs(t2[i,j,k,l]) > 1e-8):
                        fspt.write('%i %i %i %i %.10f\n' % ((i+1+ncore), \
                        (j+1+nocc+ncore), (k+1+ncore), (l+1+nocc+ncore), \
                        t2[i,j,k,l]*2.0))
fspt.close()                    
    
with open(name+'.mol', 'w') as f2:
    molden.header(mol, f2)
    molden.orbital_coeff(mol, f2, mf.mo_coeff, occ=mf.mo_occ)

#INFO: ******************** input file end ********************


System: ('Linux', 'silicio', '3.16.0-4-amd64', '#1 SMP Debian 3.16.51-3 (2017-12-13)', 'x86_64', '')  Threads 12
Python 2.7.15 (default, Oct 25 2018, 01:35:55) 
[GCC 8.2.0]
numpy 1.15.3  scipy 1.1.0
Date: Fri Dec  7 19:06:40 2018
PySCF version 1.6b
PySCF path  /home/jluis/src/pyscf/dev/pyscf
GIT ORIG_HEAD 45f68f7c1864ba6705547042f79d02f17d6d91ee
GIT HEAD      ref: refs/heads/dev
GIT dev branch  45f68f7c1864ba6705547042f79d02f17d6d91ee

[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 5
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 1 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 C      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.627600000000   0.627600000000   0.627600000000 AA    1.185992115777   1.185992115777   1.185992115777 Bohr
[INPUT]  3 H      0.627600000000  -0.627600000000  -0.627600000000 AA    1.185992115777  -1.185992115777  -1.185992115777 Bohr
[INPUT]  4 H     -0.627600000000   0.627600000000  -0.627600000000 AA   -1.185992115777   1.185992115777  -1.185992115777 Bohr
[INPUT]  5 H     -0.627600000000  -0.627600000000   0.627600000000 AA   -1.185992115777  -1.185992115777   1.185992115777 Bohr

nuclear repulsion = 13.4720345873821
point group symmetry = Td, use subgroup D2
num. orbitals of irrep A = 36
num. orbitals of irrep B1 = 34
num. orbitals of irrep B2 = 34
num. orbitals of irrep B3 = 34
number of shells = 49
number of NR pGTOs = 158
number of NR cGTOs = 138
basis = aug-cc-pvtz
ecp = {}
CPU time:         0.23


******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /scratch-ssd/jluis/tmpgJjcsj
max_memory 60000 MB (current use 66 MB)
Freeze 0 electrons in irreps []
    10 free electrons in irreps A B1 B2 B3
Set gradient conv threshold to 3.16228e-05
init E= -40.061045957651
HOMO (B1) = -0.501967548940385  LUMO (A) = 0.0218454492537668
cycle= 1 E= -40.2045968865146  delta_E= -0.144  |g|= 0.177  |ddm|= 1.35
HOMO (B1) = -0.534827296215979  LUMO (A) = 0.030669513411076
cycle= 2 E= -40.2127881907616  delta_E= -0.00819  |g|= 0.0495  |ddm|= 0.163
HOMO (B1) = -0.552118594495341  LUMO (A) = 0.0305352356930419
cycle= 3 E= -40.2135275347038  delta_E= -0.000739  |g|= 0.0187  |ddm|= 0.0408
HOMO (B1) = -0.545012449139868  LUMO (A) = 0.030799095530338
cycle= 4 E= -40.2136351148048  delta_E= -0.000108  |g|= 0.00177  |ddm|= 0.0141
HOMO (B1) = -0.545204790832258  LUMO (A) = 0.0308057803711805
cycle= 5 E= -40.213637134251  delta_E= -2.02e-06  |g|= 0.000251  |ddm|= 0.00384
HOMO (B1) = -0.545260358100454  LUMO (A) = 0.0308034140837649
cycle= 6 E= -40.2136371615786  delta_E= -2.73e-08  |g|= 1.7e-05  |ddm|= 0.000498
HOMO (B1) = -0.545261953579682  LUMO (A) = 0.0308030195242338
cycle= 7 E= -40.2136371616825  delta_E= -1.04e-10  |g|= 9.51e-07  |ddm|= 4.46e-05
HOMO (B1) = -0.545262152339811  LUMO (A) = 0.0308030147532115
Extra cycle  E= -40.2136371616829  delta_E= -3.34e-13  |g|= 1.92e-07  |ddm|= 7.69e-06
converged SCF energy = -40.2136371616829
* Core orbitals: 1
* Virtual orbitals: 133
!*** E(MP2):  -0.20082012
!**** E(HF+MP2): -40.41445728
